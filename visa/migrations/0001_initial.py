# Generated by Django 4.2.6 on 2024-01-22 10:45

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, max_length=20, null=True)),
                ('user_type', models.IntegerField(choices=[(0, 'Root'), (1, 'Consultant'), (2, 'Student')], default=0)),
                ('last_active', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Addresses',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('consultant_id', models.IntegerField(null=True)),
                ('root_id', models.IntegerField(null=True)),
                ('office_name', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('hotline', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'addresses',
            },
        ),
        migrations.CreateModel(
            name='Balances',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acc_paid_by', models.IntegerField(blank=True, null=True)),
                ('acc_pay_to', models.IntegerField(blank=True, null=True)),
                ('acc_pay_std_id', models.IntegerField(blank=True, null=True)),
                ('pay_method', models.IntegerField(blank=True, choices=[(1, 'Cash'), (2, 'Bank Deposit'), (3, 'Check')], null=True)),
                ('payment_status', models.IntegerField(blank=True, choices=[(1, 'Paid'), (2, 'Checking')], null=True)),
                ('acc_pay_ref', models.CharField(blank=True, max_length=255, null=True)),
                ('acc_credit', models.FloatField(blank=True, null=True)),
                ('acc_debit', models.FloatField(blank=True, null=True)),
                ('acc_deal_type', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'balances',
            },
        ),
        migrations.CreateModel(
            name='Colors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('header_color', models.CharField(max_length=255)),
                ('content_color', models.CharField(max_length=255)),
                ('footer_color', models.CharField(max_length=255)),
                ('consultant_id', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'colors',
            },
        ),
        migrations.CreateModel(
            name='ConsultantImages',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('image', models.ImageField(blank=True, null=True, upload_to='consultant/')),
                ('caption', models.CharField(max_length=255)),
                ('consultant_id', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'consultant_images',
            },
        ),
        migrations.CreateModel(
            name='ConsultantWises',
            fields=[
                ('scow_id', models.AutoField(primary_key=True, serialize=False)),
                ('scow_consultant_id', models.IntegerField(unique=True)),
                ('scow_text', models.TextField()),
                ('scow_whocanapply', models.TextField(blank=True, db_column='scow_whoCanApply', null=True)),
                ('scow_status', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'consultant_wises',
            },
        ),
        migrations.CreateModel(
            name='Countries',
            fields=[
                ('country_id', models.AutoField(primary_key=True, serialize=False)),
                ('country_name', models.CharField(max_length=30)),
                ('country_code', models.CharField(blank=True, max_length=10, null=True)),
                ('country_flag', models.CharField(max_length=60)),
                ('country_howtoapply', models.TextField(db_column='country_howToApply')),
                ('country_insertdate', models.DateField(blank=True, db_column='country_insertDate', null=True)),
                ('country_updatedate', models.DateField(blank=True, db_column='country_updateDate', null=True)),
                ('country_status', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'countries',
            },
        ),
        migrations.CreateModel(
            name='CountryAdds',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consultant_id', models.IntegerField()),
                ('country_id', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'country_adds',
            },
        ),
        migrations.CreateModel(
            name='CountryWises',
            fields=[
                ('scw_id', models.AutoField(primary_key=True, serialize=False)),
                ('scw_country_id', models.IntegerField(unique=True)),
                ('scw_title', models.CharField(blank=True, max_length=500, null=True)),
                ('scw_text', models.TextField()),
                ('scw_whocanapply', models.TextField(blank=True, db_column='scw_whoCanApply', null=True)),
                ('scw_status', models.IntegerField()),
                ('scw_image', models.ImageField(blank=True, null=True, upload_to='country_wise_scholarship_images/')),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'country_wises',
            },
        ),
        migrations.CreateModel(
            name='Customizes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True)),
                ('consultant_id', models.CharField(blank=True, max_length=20, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='customizes/')),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'customizes',
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('lon', models.FloatField(blank=True, null=True)),
                ('website', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'district',
            },
        ),
        migrations.CreateModel(
            name='FailedJobs',
            fields=[
                ('id', models.PositiveBigIntegerField(primary_key=True, serialize=False)),
                ('connection', models.TextField()),
                ('queue', models.TextField()),
                ('payload', models.TextField()),
                ('exception', models.TextField()),
                ('failed_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'failed_jobs',
            },
        ),
        migrations.CreateModel(
            name='Galleries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.CharField(max_length=255)),
                ('caption', models.CharField(max_length=255)),
                ('consultant_id', models.IntegerField()),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'galleries',
            },
        ),
        migrations.CreateModel(
            name='HomeFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consultant', models.IntegerField()),
                ('student', models.IntegerField(blank=True, null=True)),
                ('fdk_fullname', models.CharField(db_column='fdk_fullName', max_length=30)),
                ('fdk_email', models.CharField(max_length=30)),
                ('fdk_phone', models.CharField(blank=True, max_length=15, null=True)),
                ('fdk_nameofcompany', models.CharField(blank=True, db_column='fdk_nameOfCompany', max_length=30, null=True)),
                ('fdk_website', models.CharField(blank=True, max_length=20, null=True)),
                ('fdk_msg', models.TextField()),
                ('fdk_status', models.IntegerField(default=1, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'home_feedback',
            },
        ),
        migrations.CreateModel(
            name='Levels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance_id', models.IntegerField()),
                ('student_id', models.IntegerField()),
                ('consultant_id', models.IntegerField()),
                ('level_1', models.IntegerField(blank=True, null=True)),
                ('level_2', models.IntegerField(blank=True, null=True)),
                ('level_3', models.IntegerField(blank=True, null=True)),
                ('level_4', models.IntegerField(blank=True, null=True)),
                ('level_5', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'levels',
            },
        ),
        migrations.CreateModel(
            name='Maps',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('map_location', models.TextField(blank=True, null=True)),
                ('consultant_id', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'maps',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('General Inquiry', 'General Inquiry'), ('Visa Application', 'Visa Application'), ('Document Submission', 'Document Submission'), ('Appointment Request', 'Appointment Request')], max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('name', models.CharField(max_length=255)),
                ('phonenumber', models.CharField(max_length=20)),
                ('subject', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('is_read', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Migrations',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('migration', models.CharField(max_length=255)),
                ('batch', models.IntegerField()),
            ],
            options={
                'db_table': 'migrations',
            },
        ),
        migrations.CreateModel(
            name='OfferLetters',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='offer_letter_images/')),
            ],
            options={
                'db_table': 'offer_letters',
            },
        ),
        migrations.CreateModel(
            name='PasswordResets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=255)),
                ('token', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'password_resets',
            },
        ),
        migrations.CreateModel(
            name='Rates',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('rate_added_by', models.IntegerField()),
                ('rate_added_to', models.IntegerField()),
                ('first_rate', models.FloatField(blank=True, null=True)),
                ('second_rate', models.FloatField(blank=True, null=True)),
                ('third_rate', models.FloatField(blank=True, null=True)),
                ('four_rate', models.FloatField(blank=True, null=True)),
                ('five_rate', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rates',
            },
        ),
        migrations.CreateModel(
            name='Results',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('secondary', models.IntegerField()),
                ('secondary_board', models.CharField(blank=True, max_length=100, null=True)),
                ('secondary_result', models.FloatField()),
                ('secondary_roll_no', models.CharField(blank=True, max_length=50, null=True)),
                ('secondary_reg_no', models.CharField(blank=True, max_length=50, null=True)),
                ('secondary_certificate_no', models.CharField(blank=True, max_length=255, null=True)),
                ('secondary_passing_year', models.IntegerField(blank=True, null=True)),
                ('secondary_certificate_copy', models.CharField(blank=True, max_length=255, null=True)),
                ('higher', models.IntegerField()),
                ('higher_board', models.CharField(blank=True, max_length=50, null=True)),
                ('higher_result', models.FloatField()),
                ('higher_roll_no', models.CharField(blank=True, max_length=50, null=True)),
                ('higher_reg_no', models.CharField(blank=True, max_length=50, null=True)),
                ('higher_certificate_no', models.CharField(blank=True, max_length=255, null=True)),
                ('higher_passing_year', models.IntegerField(blank=True, null=True)),
                ('higher_certificate_copy', models.CharField(blank=True, max_length=255, null=True)),
                ('student_id', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'results',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consultant', models.IntegerField()),
                ('student', models.IntegerField()),
                ('raw_rating', models.IntegerField()),
                ('rating', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MinValueValidator(5)])),
                ('comment', models.TextField(blank=True, max_length=1000, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'review',
            },
        ),
        migrations.CreateModel(
            name='ScholarShips',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schp_description', models.TextField(blank=True, null=True)),
                ('apply_process', models.TextField(blank=True, null=True)),
                ('consultant_id', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'scholar_ships',
            },
        ),
        migrations.CreateModel(
            name='StudentDetails',
            fields=[
                ('dets_id', models.AutoField(primary_key=True, serialize=False)),
                ('dets_regs_id', models.IntegerField()),
                ('dets_bloodgroup', models.CharField(blank=True, db_column='dets_bloodGroup', max_length=5, null=True)),
                ('dets_fathername', models.CharField(blank=True, db_column='dets_fatherName', max_length=30, null=True)),
                ('dets_mothername', models.CharField(blank=True, db_column='dets_motherName', max_length=30, null=True)),
                ('dets_nationality', models.CharField(blank=True, max_length=15, null=True)),
                ('dets_dob', models.DateField(blank=True, null=True)),
                ('student_image', models.ImageField(blank=True, null=True, upload_to='student_images/')),
                ('dets_thumbnaillink', models.CharField(blank=True, db_column='dets_thumbnailLink', max_length=60, null=True)),
                ('dets_favconsultantlist', models.CharField(blank=True, db_column='dets_favConsultantList', max_length=120, null=True)),
                ('dets_updatedate', models.DateField(blank=True, db_column='dets_updateDate', null=True)),
                ('dets_status', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'student_details',
            },
        ),
        migrations.CreateModel(
            name='Thana',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thanas', to='visa.district')),
            ],
            options={
                'db_table': 'thana',
            },
        ),
        migrations.CreateModel(
            name='UniversityWise',
            fields=[
                ('uw_id', models.AutoField(primary_key=True, serialize=False)),
                ('uw_university_id', models.IntegerField(unique=True)),
                ('uw_text', models.TextField()),
                ('uw_whocanapply', models.TextField(blank=True, db_column='uw_whoCanApply', null=True)),
                ('uw_status', models.IntegerField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'university_wises',
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'User Sessions',
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=30)),
                ('user_name', models.CharField(blank=True, max_length=150, null=True)),
                ('email', models.CharField(max_length=30, unique=True)),
                ('phone', models.CharField(max_length=125, unique=True)),
                ('gender', models.CharField(blank=True, max_length=50, null=True)),
                ('otp', models.CharField(blank=True, max_length=150, null=True)),
                ('pin', models.CharField(blank=True, max_length=50, null=True)),
                ('change_phone_otp', models.CharField(blank=True, max_length=150, null=True)),
                ('about', models.TextField(blank=True, null=True)),
                ('consultant_img', models.ImageField(blank=True, null=True, upload_to='consultant_img/')),
                ('rating', models.FloatField(blank=True, default=0.0, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MinValueValidator(5.0)])),
                ('no_of_ratings', models.IntegerField(blank=True, default=0, null=True)),
                ('land_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('fax_no', models.CharField(blank=True, max_length=20, null=True)),
                ('company_name', models.CharField(blank=True, max_length=60, null=True)),
                ('est_date', models.DateField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('website', models.CharField(blank=True, max_length=40, null=True)),
                ('raw_password', models.CharField(max_length=60)),
                ('password', models.CharField(max_length=255)),
                ('user_role', models.IntegerField(blank=True, null=True)),
                ('active_status', models.IntegerField(blank=True, null=True)),
                ('suspension_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('consultant_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='visa.district')),
                ('thana', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='visa.thana')),
            ],
            options={
                'db_table': 'users',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('university_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('abbreviation', models.CharField(max_length=20)),
                ('established_date', models.DateField(blank=True, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('countries', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='universities', to='visa.countries')),
            ],
            options={
                'db_table': 'universities',
            },
        ),
        migrations.CreateModel(
            name='Students',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=30, unique=True)),
                ('phone', models.CharField(max_length=125, unique=True)),
                ('otp', models.CharField(blank=True, max_length=150, null=True)),
                ('user_type', models.IntegerField(choices=[(0, 'Student'), (1, 'Guardian')])),
                ('gender', models.CharField(blank=True, choices=[(0, 'Male'), (1, 'Female')], max_length=10, null=True)),
                ('dets_status', models.IntegerField(default=0)),
                ('student_name', models.CharField(blank=True, max_length=255, null=True)),
                ('relation', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('country_id', models.CharField(blank=True, max_length=150, null=True)),
                ('raw_password', models.CharField(max_length=60)),
                ('password', models.CharField(max_length=255)),
                ('status', models.IntegerField(choices=[(0, 'Inactive'), (1, 'Acive')], default=0)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('countries', models.ManyToManyField(blank=True, null=True, related_name='countries', to='visa.countries')),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='visa.district')),
                ('student_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('thana', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='visa.thana')),
            ],
            options={
                'db_table': 'students',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('reply_text', models.TextField(null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='visa.message')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ConsultantDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consultant_id', models.IntegerField()),
                ('consultant_img', models.ImageField(blank=True, null=True, upload_to='')),
                ('consultant_maplocation', models.TextField(blank=True, db_column='consultant_mapLocation', null=True)),
                ('consultant_requirement', models.TextField(blank=True, null=True)),
                ('consultant_logo', models.ImageField(blank=True, null=True, upload_to='consultant/')),
                ('consultant_facebook', models.CharField(blank=True, max_length=50, null=True)),
                ('consultant_website', models.CharField(blank=True, max_length=150, null=True)),
                ('consultant_twitter', models.CharField(blank=True, max_length=50, null=True)),
                ('consultant_googleplus', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.IntegerField(default=0)),
                ('consultant_experience', models.IntegerField(blank=True, null=True)),
                ('consultant_bio', models.CharField(blank=True, max_length=150, null=True)),
                ('consultant_intro', models.CharField(blank=True, max_length=150, null=True)),
                ('consultant_description', models.CharField(blank=True, max_length=150, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('consultant_countries', models.ManyToManyField(null=True, related_name='consultant_details', to='visa.countries')),
                ('consultant_customizes', models.ManyToManyField(null=True, related_name='consultant_customizes', to='visa.customizes')),
            ],
            options={
                'db_table': 'consultant_details',
                'managed': True,
            },
        ),
    ]
